name: Python Application CI

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'poetry'  # Poetryの依存関係をキャッシュ
    
    - name: Install Poetry
      run: |
        python -m pip install --upgrade pip
        pip install poetry==1.7.1

    - name: Install TA-Lib (system dependency)
      run: |
        sudo apt-get update
        sudo apt-get install -y libta-lib-dev

    - name: Configure Poetry
      run: |
        poetry config virtualenvs.create true
        poetry config virtualenvs.in-project true
        
    - name: Set up Poetry cache
      uses: actions/cache@v3
      id: cache
      with:
        path: |
          ~/.cache/pypoetry
          .venv
        key: ${{ runner.os }}-python-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-python-${{ matrix.python-version }}-
          ${{ runner.os }}-
    
    - name: Install dependencies
      run: |
        poetry install --with dev,test --sync --no-interaction --no-ansi

    - name: Run linters and formatters (pre-commit)
      run: |
        # poetry run を使用して、仮想環境内のツールを実行します。
        poetry run pre-commit run --all-files

    - name: Run Pytest with coverage
      run: |
        # poetry run を使用して、仮想環境内のpytestを実行します。
        poetry run pytest -n auto --maxfail=1 --cov=fx_trader --cov-report=xml --cov-report=term-missing tests/
      env:
        PYTHONPATH: ${{ github.workspace }}

    - name: Run Mutation Testing (Mutmut)
      # Mutmut HTMLレポートが生成されることを確認し、そのパスをartifactsにアップロードします。
      run: |
        poetry run mutmut run
        poetry run mutmut html
        
        # mutmut html のデフォルト出力パスはカレントディレクトリの html/mutmut/ ですが、
        # 確実を期すため、生成されたディレクトリが存在するか確認します。
        if [ -d "html/mutmut" ]; then
          MSR=$(poetry run mutmut results | grep -oP '\d+%' | head -1 | tr -d '%')
          echo "Mutation Score: ${MSR}%"
          
          if [ "$MSR" -lt 80 ]; then
            echo "Mutation Score (${MSR}%) is below 80%. Failing build."
            exit 1
          fi
          echo "Mutation testing complete. Check HTML report in artifacts."
        else
          echo "Warning: mutmut html report directory 'html/mutmut' not found. Skipping mutation score check."
        fi

    - name: Check for Codecov token
      id: check_codecov_token
      run: |
        if [ -n "${{ secrets.CODECOV_TOKEN }}" ]; then
          echo "codecov_token_exists=true" >> $GITHUB_OUTPUT
        else
          echo "codecov_token_exists=false" >> $GITHUB_OUTPUT
        fi

    - name: Upload coverage to Codecov
      # Codecovにカバレッジレポートをアップロードします。
      # CODECOV_TOKENが設定されている場合にのみ実行します。
      # プライベートリポジトリの場合は必須です。
      if: steps.check_codecov_token.outputs.codecov_token_exists == 'true'
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage.xml
        fail_ci_if_error: true
        verbose: true

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
      
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      with:
        context: .
        push: true
        tags: |
          ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:${{ github.sha }}
          ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          BUILDKIT_INLINE_CACHE=1

    - name: Check if mutmut report exists
      id: check_mutmut_report
      run: |
        if [ -d "html/mutmut" ]; then
          echo "mutmut_report_exists=true" >> $GITHUB_OUTPUT
        else
          echo "mutmut_report_exists=false" >> $GITHUB_OUTPUT
        fi

    - name: Upload Mutmut HTML report
      # mutmutレポートディレクトリが存在する場合にのみアップロードします。
      if: always() && steps.check_mutmut_report.outputs.mutmut_report_exists == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: mutmut-html-report-${{ matrix.python-version }}
        path: html/mutmut/
        retention-days: 7