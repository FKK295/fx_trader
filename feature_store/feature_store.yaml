# fx_trader/feature_store/feature_store.yaml
project: fx_trader_feature_repo
registry: registry.db # Path relative to this feature_store.yaml file. Will be created by `feast apply`.
provider: local # Indicates that we are using a local Feast setup
entity_key_serialization_version: 2 # Required for proper Long type serialization

repo_path: .

offline_store:
  type: file # Using local Parquet files for the offline store
  # The offline store will use the default path or the one specified in FEAST_OFFLINE_STORE_PATH
  # Individual data sources will define their own paths in data_sources.py
online_store:
  type: redis
  # Connection details for Redis will be loaded from online_store.yaml
  # The path to online_store.yaml is specified by FEAST_ONLINE_STORE_CONFIG_PATH in settings.
  # Feast will look for a redis_opts block in that yaml.
  # For Feast versions that directly support a path to another YAML for online store config:
  # config_path: online_store.yaml # Path relative to this feature_store.yaml
  # For older versions, you might need to specify connection details directly or ensure
  # Feast picks them up from environment variables if FEAST_ONLINE_STORE_CONFIG_PATH is used by custom logic.
  # Let's assume a newer Feast version or that the Python SDK will handle online_store.yaml path correctly.
  # If not, redis connection details would be here:
  # connection_string: "${REDIS_HOST}:${REDIS_PORT},db=${REDIS_DB_FEAST}"